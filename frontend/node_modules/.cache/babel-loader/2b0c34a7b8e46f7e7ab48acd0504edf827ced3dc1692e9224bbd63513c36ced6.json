{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\offic\\\\Desktop\\\\text-summarizer\\\\src\\\\Summarizer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { pipeline } from \"@xenova/transformers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Summarizer = () => {\n  _s();\n  const [text, setText] = useState(\"\"); // Input text\n  const [summary, setSummary] = useState(\"\"); // Summarized output\n  const [loading, setLoading] = useState(false); // Loading state\n\n  const handleSummarize = async () => {\n    setLoading(true);\n    setSummary(\"\"); // Clear previous summary\n\n    try {\n      // Try using a different model or fallback model if the primary one fails\n      const modelName = \"Xenova/bart-large-cnn\"; // You can replace this with another model if needed\n      const summarizer = await pipeline(\"summarization\", modelName);\n\n      // Generate the summary\n      const result = await summarizer(text, {\n        max_length: 50,\n        min_length: 25\n      });\n      setSummary(result[0].summary_text);\n    } catch (error) {\n      console.error(\"Error during summarization:\", error);\n      setSummary(\"An error occurred while summarizing the text.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 max-w-xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold text-center mb-4\",\n      children: \"Text Summarizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"w-full p-2 border rounded mb-4\",\n      rows: \"5\",\n      placeholder: \"Enter text to summarize...\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n      onClick: handleSummarize,\n      disabled: loading || !text.trim(),\n      children: loading ? \"Summarizing...\" : \"Summarize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 border rounded bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-bold\",\n        children: \"Summary:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Summarizer, \"QzvaKl43qmgWwOrkHxV2XRGEjG8=\");\n_c = Summarizer;\nexport default Summarizer;\nvar _c;\n$RefreshReg$(_c, \"Summarizer\");","map":{"version":3,"names":["React","useState","pipeline","jsxDEV","_jsxDEV","Summarizer","_s","text","setText","summary","setSummary","loading","setLoading","handleSummarize","modelName","summarizer","result","max_length","min_length","summary_text","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","placeholder","value","onChange","e","target","onClick","disabled","trim","_c","$RefreshReg$"],"sources":["C:/Users/offic/Desktop/text-summarizer/src/Summarizer.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { pipeline } from \"@xenova/transformers\";\r\n\r\nconst Summarizer = () => {\r\n  const [text, setText] = useState(\"\"); // Input text\r\n  const [summary, setSummary] = useState(\"\"); // Summarized output\r\n  const [loading, setLoading] = useState(false); // Loading state\r\n\r\n  const handleSummarize = async () => {\r\n    setLoading(true);\r\n    setSummary(\"\"); // Clear previous summary\r\n\r\n    try {\r\n      // Try using a different model or fallback model if the primary one fails\r\n      const modelName = \"Xenova/bart-large-cnn\"; // You can replace this with another model if needed\r\n      const summarizer = await pipeline(\"summarization\", modelName);\r\n\r\n      // Generate the summary\r\n      const result = await summarizer(text, { max_length: 50, min_length: 25 });\r\n\r\n      setSummary(result[0].summary_text);\r\n    } catch (error) {\r\n      console.error(\"Error during summarization:\", error);\r\n      setSummary(\"An error occurred while summarizing the text.\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4 max-w-xl\">\r\n      <h1 className=\"text-2xl font-bold text-center mb-4\">Text Summarizer</h1>\r\n      <textarea\r\n        className=\"w-full p-2 border rounded mb-4\"\r\n        rows=\"5\"\r\n        placeholder=\"Enter text to summarize...\"\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n      ></textarea>\r\n      <button\r\n        className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n        onClick={handleSummarize}\r\n        disabled={loading || !text.trim()}\r\n      >\r\n        {loading ? \"Summarizing...\" : \"Summarize\"}\r\n      </button>\r\n      {summary && (\r\n        <div className=\"mt-4 p-4 border rounded bg-gray-100\">\r\n          <h3 className=\"font-bold\">Summary:</h3>\r\n          <p>{summary}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Summarizer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
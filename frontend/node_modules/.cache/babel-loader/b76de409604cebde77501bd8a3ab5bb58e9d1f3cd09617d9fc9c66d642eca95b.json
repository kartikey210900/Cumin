{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\offic\\\\Desktop\\\\text-summarizer\\\\src\\\\Summarizer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport './styles.css'; // Import the custom CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Summarizer = () => {\n  _s();\n  const [text, setText] = useState(\"\"); // Input text\n  const [summary, setSummary] = useState(\"\"); // Summarized output\n  const [loading, setLoading] = useState(false); // Loading state\n  const [error, setError] = useState(\"\"); // Error state\n  const [isDarkMode, setIsDarkMode] = useState(false); // Dark mode toggle\n\n  useEffect(() => {\n    // Check if dark mode is saved in localStorage\n    const savedMode = localStorage.getItem('mode');\n    if (savedMode === 'dark') {\n      setIsDarkMode(true);\n    }\n  }, []);\n  useEffect(() => {\n    // Save dark mode preference to localStorage\n    if (isDarkMode) {\n      localStorage.setItem('mode', 'dark');\n    } else {\n      localStorage.setItem('mode', 'light');\n    }\n  }, [isDarkMode]);\n  const handleSummarize = async () => {\n    setLoading(true);\n    setSummary(\"\"); // Clear previous summary\n    setError(\"\"); // Clear previous error\n\n    try {\n      // Send the text to the Flask backend for summarization\n      const response = await axios.post(\"http://127.0.0.1:5000/summarize\", {\n        text\n      });\n\n      // Set the summary in the state\n      setSummary(response.data.summary);\n    } catch (error) {\n      console.error(\"Error during summarization:\", error);\n      setError(\"An error occurred while summarizing the text.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `fullscreen-container ${isDarkMode ? 'dark-mode' : 'light-mode'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `summarizer-card ${isDarkMode ? 'dark-mode' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mode-toggle\",\n        onClick: () => setIsDarkMode(!isDarkMode),\n        children: isDarkMode ? \"ðŸŒž\" : \"ðŸŒ™\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Text Summarizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textarea\",\n        rows: \"6\",\n        placeholder: \"Enter text to summarize...\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleSummarize,\n        disabled: loading || !text.trim(),\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this) : \"Summarize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Summary:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Summarizer, \"Rezrd4AQeOVc7nDRF5jzyGozD/Q=\");\n_c = Summarizer;\nexport default Summarizer;\nvar _c;\n$RefreshReg$(_c, \"Summarizer\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Summarizer","_s","text","setText","summary","setSummary","loading","setLoading","error","setError","isDarkMode","setIsDarkMode","savedMode","localStorage","getItem","setItem","handleSummarize","response","post","data","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","rows","placeholder","value","onChange","e","target","disabled","trim","_c","$RefreshReg$"],"sources":["C:/Users/offic/Desktop/text-summarizer/src/Summarizer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport './styles.css'; // Import the custom CSS file\r\n\r\nconst Summarizer = () => {\r\n  const [text, setText] = useState(\"\"); // Input text\r\n  const [summary, setSummary] = useState(\"\"); // Summarized output\r\n  const [loading, setLoading] = useState(false); // Loading state\r\n  const [error, setError] = useState(\"\"); // Error state\r\n  const [isDarkMode, setIsDarkMode] = useState(false); // Dark mode toggle\r\n\r\n  useEffect(() => {\r\n    // Check if dark mode is saved in localStorage\r\n    const savedMode = localStorage.getItem('mode');\r\n    if (savedMode === 'dark') {\r\n      setIsDarkMode(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Save dark mode preference to localStorage\r\n    if (isDarkMode) {\r\n      localStorage.setItem('mode', 'dark');\r\n    } else {\r\n      localStorage.setItem('mode', 'light');\r\n    }\r\n  }, [isDarkMode]);\r\n\r\n  const handleSummarize = async () => {\r\n    setLoading(true);\r\n    setSummary(\"\"); // Clear previous summary\r\n    setError(\"\"); // Clear previous error\r\n\r\n    try {\r\n      // Send the text to the Flask backend for summarization\r\n      const response = await axios.post(\"http://127.0.0.1:5000/summarize\", {\r\n        text,\r\n      });\r\n\r\n      // Set the summary in the state\r\n      setSummary(response.data.summary);\r\n    } catch (error) {\r\n      console.error(\"Error during summarization:\", error);\r\n      setError(\"An error occurred while summarizing the text.\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className={`fullscreen-container ${isDarkMode ? 'dark-mode' : 'light-mode'}`}>\r\n      <div className={`summarizer-card ${isDarkMode ? 'dark-mode' : ''}`}>\r\n        <button className=\"mode-toggle\" onClick={() => setIsDarkMode(!isDarkMode)}>\r\n          {isDarkMode ? \"ðŸŒž\" : \"ðŸŒ™\"}\r\n        </button>\r\n        <h1>Text Summarizer</h1>\r\n\r\n        <textarea\r\n          className=\"textarea\"\r\n          rows=\"6\"\r\n          placeholder=\"Enter text to summarize...\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        ></textarea>\r\n\r\n        <button\r\n          className=\"button\"\r\n          onClick={handleSummarize}\r\n          disabled={loading || !text.trim()}\r\n        >\r\n          {loading ? (\r\n            <div className=\"spinner\"></div>\r\n          ) : (\r\n            \"Summarize\"\r\n          )}\r\n        </button>\r\n\r\n        {summary && (\r\n          <div className=\"result-box\">\r\n            <h3>Summary:</h3>\r\n            <p>{summary}</p>\r\n          </div>\r\n        )}\r\n\r\n        {error && (\r\n          <div className=\"error-box\">\r\n            <h3>Error:</h3>\r\n            <p>{error}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Summarizer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}